name: Build artifact

on:
  - pull_request
  - workflow_call

env:
  # These env variables should match the values in the .infrastructure/terraform.tfvars.
  # These env variables should match the values in the .infrastructure/bootstrap/terraform.tfvars.
  ARTIFACTORY_BUCKET_NAME: "global-artifactory"
  AWS_DEFAULT_REGION: "ap-southeast-2"
  # These env variables should match AWS resources.
  AWS_ACCOUNT_ID: "052859230833"

permissions:
  id-token: write
  contents: read

jobs:
  check-artifact-existence:
    runs-on: ubuntu-latest
    outputs:
      isExist: ${{ steps.cache.outputs.cache-hit }}
    steps:
      # TODO
      - name: Check if an artifact of this version exist
        id: cache
        uses: actions/cache@v3
        with:
          path: ./dist/
          key: ${{ github.sha }}

  check-source-code:
    needs: check-artifact-existence
    if: needs.check-artifact-existence.outputs.isExist != 'true'
    runs-on: ubuntu-latest
    steps:
      # TODO
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Exit with error
        run: exit 1
      - name: Init repo
        if: always()
        run: echo "init"
      - name: Init repo
        run: echo "init"
      - name: Check format and linter
        run: echo "check"

  test:
    needs: check-artifact-existence
    if: needs.check-artifact-existence.outputs.isExist != 'true'
    runs-on: ubuntu-latest
    steps:
      # TODO
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Init repo
        run: echo "init"
      - run: echo "test"

  build-and-publish:
    needs: [check-source-code, test]
    runs-on: ubuntu-latest
    steps:
      # TODO
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Init repo
        run: echo "init repo"
      - name: Build a dist folder
        run: echo "build a dist folder"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      # TODO: ignore error.html
      # TODO: exclude html files
      - name: Publish the dist folder
        run: |
          aws s3 sync --delete \
          ./dist \
          s3://${{ env.ARTIFACTORY_BUCKET_NAME }}/${{ github.repository }}/${{ github.sha }}
      # TODO: remove .html extension name
      - name: Publish HTML files
        run: echo "Upload HTML files"
