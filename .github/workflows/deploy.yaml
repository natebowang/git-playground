name: Deploy

on:
  workflow_call:
    inputs:
      firstSubdomainName:
        required: true
        type: string
      distributionId:
        required: true
        type: string

env:
  # These env variables should match the values in the .infrastructure/terraform.tfvars.
  # These env variables should match the values in the .infrastructure/shared/terraform.tfvars.
  ARTIFACTORY_BUCKET_NAME: "git-playground-artifactory"
  AWS_DEFAULT_REGION: "ap-southeast-2"
  # These env variables should match AWS resources.
  AWS_ACCOUNT_ID: "052859230833"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Copy the artifact to the web root
        run: |
          aws s3 sync --delete \
            s3://${{ env.ARTIFACTORY_BUCKET_NAME }}/${{ github.sha }} \
            s3://${{ inputs.firstSubdomainName }}-web-root
          # These tags need to be ignored in the provider.tf
          echo '{'\
              "\"artifact-git-origin\":\"$( git remote get-url origin )\","\
              "\"artifact-git-commit-hash\":\"${{ github.sha }}\","\
              "\"artifact-updated-by\":\"${{ github.actor }}\","\
              "\"artifact-last-updated-utc-time\":\"$(date -u --rfc-3339=seconds)\""\
            '}' \
            > artifactTags.json
          aws resourcegroupstaggingapi tag-resources \
            --resource-arn-list arn:aws:s3:::${{ inputs.firstSubdomainName }}-web-root \
            --tags file://artifactTags.json

  invalidate-cdn-cache:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Invalidate CDN cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ inputs.distributionId }} \
            --paths "/*"
